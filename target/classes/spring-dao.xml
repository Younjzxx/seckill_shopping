<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context.xsd
	http://www.springframework.org/schema/aop
	http://www.springframework.org/schema/aop/spring-aop.xsd
	http://www.springframework.org/schema/tx
	http://www.springframework.org/schema/tx/spring-tx.xsd">
<!--    配置整合mybatis过程-->
<!--    1.配置数据库相关参数-->
    <context:property-placeholder location="classpath:jdbcConfig.properties"/>
<!--    2.配置数据库连接池-->
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
<!--        配置连接池属性-->
        <property name="driverClass" value="${driver}"/>
        <property name="jdbcUrl" value="${url}"/>
<!--报错日志：jdbcConfig文件的数据库用户名字段不要用username，这样c3p0会自动将操作系统的账户名称写入，可以用user来表示-->
        <property name="user" value="${user}"/>
        <property name="password" value="${password}"/>
<!--        c3p0连接池的私有属性-->
        <property name="maxPoolSize" value="30"/>
        <property name="minPoolSize" value="10"/>
<!--        关闭连接后不自动commit-->
        <property name="autoCommitOnClose" value="false"/>
<!--        获取连接超时时间-->
        <property name="checkoutTimeout" value="1000"/>
<!--        当获取失败时默认重试次数-->
        <property name="acquireRetryAttempts" value="2"/>
    </bean>

<!--    3.配置SqlSessionFactory工厂-->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
<!--        注入数据库连接池-->
        <property name="dataSource" ref="dataSource"/>
<!--        配置mybatis全局配置文件 SqlMapConfig.xml-->
        <property name="configLocation" value="classpath:SqlMapConfig.xml"/>
<!--        扫描entity包 使用别名-->
        <property name="typeAliasesPackage" value="com.seckill.entity"/>
<!--        扫描sql配置文件：mapper需要的xml文件-->
        <property name="mapperLocations" value="classpath:com/seckill/dao/*.xml"/>
    </bean>

<!--    4.配置扫描dao接口包，动态实现dao接口并注入到spring容器中-->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
<!--        注入SqlSessionFactory-->
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
<!--        给出需要扫描的dao接口包-->
        <property name="basePackage" value="com.seckill.dao"/>
    </bean>

<!--    注入redisdao-->
    <bean id="redisDao" class="com.seckill.dao.cache.RedisDao">
        <constructor-arg index="0" value="localhost"/>
        <constructor-arg index="1" value="6379"/>
    </bean>
</beans>